name: Lint and Test Charts
# See also https://github.com/helm/chart-testing-action
on:
  pull_request:
    branches:
      - main
    paths:
      - '!**/README.md'
      - '.github/workflows/tests.yaml'

  push:
    branches:
      - main
    paths:
      - '!**/README.md'
      - '.github/workflows/tests.yaml'
  workflow_dispatch:

jobs:
  lint-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v4.3.0
        with:
          version: v3.18.4

      - name: Set up Python
        uses: actions/setup-python@v5.3.0
        with:
          python-version: 3.x
          check-latest: true

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.7.0

      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
          changed=$(ct list-changed --target-branch ${{ github.event.repository.default_branch }})
          if [[ -n "$changed" ]]; then
            echo "changed=true" >> $GITHUB_OUTPUT
          fi

      - name: Run chart-testing (lint)
        run: ct lint --validate-maintainers=false --lint-conf lintconf.yaml --target-branch ${{ github.event.repository.default_branch }}

      - name: Create kind cluster
        uses: helm/kind-action@v1.12.0
        if: steps.list-changed.outputs.changed == 'true' || github.event_name == 'workflow_dispatch'

      - name: Add repositories
        run: helm dependency list . 2> /dev/null | tail +2 | head -n -1 | awk '$3 !~ /^file:/ { print "helm repo add " $1 " " $3 }' | while read cmd; do $cmd; done

      - name: Remove deployment failure triggers
        run: |
          # Remove <path:... directives
          sed -Ei 's/<path:factory-x-ci-cd\/data\/async-aas\#([a-zA-Z0-9-]+)>/\1/g' values.yaml
          # Disable git init phase, we don't need initial model for testing the FAÂ³ST deployment
          sed -Ez 's/seeding:\n( *)enabled: true/seeding:\n\1enabled: false/' -i values.yaml

      - name: Run chart-testing (install)
        run: ct install --target-branch ${{ github.event.repository.default_branch }} --charts .
        if: steps.list-changed.outputs.changed == 'true' || github.event_name == 'workflow_dispatch'